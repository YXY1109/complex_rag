# Pre-commit hooks configuration for Complex RAG
# Install with: pre-commit install

repos:
  # Built-in hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=10240']  # 10MB
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-toml
      - id: check-json
      - id: check-xml
      - id: check-ast
      - id: check-docstring-first
      - id: debug-statements
      - id: name-tests-test
        args: [--pytest-test-first]
      - id: requirements-txt-fixer
      - id: fix-byte-order-marker
      - id: mixed-line-ending
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  # Python code formatting with Black
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88, --target-version=py39, --target-version=py310, --target-version=py311, --target-version=py312]

  # Import sorting with isort
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88, --multi-line=3, --trailing-comma]

  # Linting with flake8
  - repo: https://github.com/pycqa/flake8
    rev: 7.1.1
    hooks:
      - id: flake8
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify
        args: [--config=quality/.flake8]

  # Type checking with MyPy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.13.0
    hooks:
      - id: mypy
        additional_dependencies:
          - types-redis
          - types-requests
          - types-PyYAML
        args: [--ignore-missing-imports, --no-strict-optional, --warn-redundant-casts]
        exclude: ^(tests/|docs/|scripts/)

  # Security linting with Bandit
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: [-c, pyproject.toml]
        additional_dependencies: ["bandit[toml]"]
        exclude: ^tests/

  # Upgrade Python syntax with pyupgrade
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.18.0
    hooks:
      - id: pyupgrade
        args: [--py39-plus]

  # Remove unused imports with autoflake
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.3.1
    hooks:
      - id: autoflake
        args:
          - --in-place
          - --remove-all-unused-imports
          - --remove-unused-variables
          - --remove-duplicate-keys
          - --ignore-init-module-imports

  # Check for common mistakes with yesqa
  - repo: https://github.com/asottile/yesqa
    rev: v1.7.0
    hooks:
      - id: yesqa
        additional_dependencies:
          - flake8
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify

  # Check Python code with Ruff (fast linter)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.7.0
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]

  # Check docstring coverage
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--config=quality/.flake8]
        exclude: ^(tests/|docs/|scripts/|migrations/)

  # Check for commit message compliance
  - repo: https://github.com/commitizen-tools/commitizen
    rev: 3.29.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Check for secrets
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]

  # Check Docker files
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # Check shell scripts
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck

  # Check for spelling errors
  - repo: https://github.com/codespell-project/codespell
    rev: v2.3.0
    hooks:
      - id: codespell
        args: [--ignore-words=quality/.codespell-words]

# Configure CI settings
default_ci:
  skip:
    - detect-secrets
    - commitizen

# Configure local settings
default_stages: [commit]
fail_fast: false

# Configure additional options
default_language_version:
  python: python3.9